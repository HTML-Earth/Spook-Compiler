Shader{
  #Declarations
  Num i = 0; Num radius; Num height = 100; Num length = 100; # virker ikke
  Num d;

  #Unused for
  for(d = 0 to 1){}

  #Increment i by 4, i = 4
  for (0 to 4) {
    i = i + 1;
  }

  #Forget previous for-loop, this one does even require a block
  for (Num i = 0 to 4)
    i = 4;

  #Shape movement
  Num jumptime = abs(sin(iTime * i));
  Num yPos = 300 * (jumptime*0.5+1) - 200;

  #Get in Shape
  Rectangle red = (height, length, Color.green());
  Bulletbill billy = (height, length, Color.blue());
  billy.parent();
  if (true) {
    radius = 46 + 100 / 2 + 4; #Det 100
  } else
    radius = 0;

  #And Action!
  Scene.setColor(Color.black());
  Scene.Add(circleFactory(radius, Color.red()));
  Scene.Add(rec, 100, yPos);
  Scene.Add(billy.setShadow(billy));
  Scene.Add(billy);
}

#Totally unnecessary function to create new circles
Circle circleFactory(Num radius, Color color) {
  Circle circle = (radius, color);
  return circle;
}

Class Bulletbill extends Shape{
  Num length, height;
  Num radius = height/2;
  #Color from Shape
  Rectangle body = (length, height, super.color);
  Circle head = (radius, super.color);
  Color shadow = (105, 105, 105);

  #Constructor
  #Bulletbill (Num height, Num length, Color color) {
  #  this.height = height;
  #  this.length = length;
  #  super.color = color;
  #}

  Void parent() {
      head.setParent(body);
      head.setPosition(length, height);
  }

  #Create shadow func
  Bulletbill setShadow(Bulletbill bulletbill){
    Bulletbill billShadow = bulletbill;

    #Scale
    billShadow.setScale(1.3, 0.9);

    #Stretch rectangle
    #billShadow.body.setScale(1.3, 0.9);

    #Circle -> Ellipse
    #billShadow.head.setScale(1.3, 0.9); double dot doesn't work, you need getter

    #Place shadow beneath original figure
    billShadow.setParent(bulletbill - 100);

    return billShadow;
  }
}