Shader {
    # Unit and center
    Num u = Screen.y * 0.009;
    Vec2 center = (Screen.x / 2, Screen.y / 2);

    # Colors
    Vec4 bright = colorFromValue(0.6);
    Vec4 medium = colorFromValue(0.4);
    Vec4 dark = colorFromValue(0.3);
    Vec4 darker = colorFromValue(0.2);

    # Rotations
    Num walkSpeed = 3;

    Num upperRotBase = -40;
    Num upperRot = 45;

    Num lowerRotBase = 90;
    Num lowerRot = 40;

    Num footRotBase = -75;
    Num footRot = -45;

    Num frontUpperRot = sin(Time * walkSpeed) * upperRot + upperRotBase;
    Num frontLowerRot = cos(Time * walkSpeed + Pi) * lowerRot + lowerRotBase;
    Num frontFootRot = abs(sin(Time * walkSpeed - Pi)) * footRot + footRotBase;

    Num backUpperRot = sin(Time * walkSpeed + Pi) * upperRot + upperRotBase;
    Num backLowerRot = cos(Time * walkSpeed + Pi * 2) * lowerRot + lowerRotBase;
    Num backFootRot  = abs(sin(Time * walkSpeed)) * footRot + footRotBase;

    # Body
    Empty body = (center.x - 20*u, center.y + sin(Time * walkSpeed * 2) * 5*u + 40*u);

    Vec2 backLegOffset = (cos(Time * walkSpeed + Pi) * 10*u, -sin(Time * walkSpeed + Pi) * 5*u - 5*u);
    createLeg(u, darker, darker, darker, body, backUpperRot, backLowerRot, backFootRot, backLegOffset);

    Circle bodyShape = (25*u, dark);
    bodyShape.setParent(body);

    Rectangle engine = (15*u, 30*u, medium);
    engine.setParent(body);
    engine.setPosition(sin(Time * 30) * 0.5*u - 30*u, sin(Time * 40) * 1*u + 10*u);
    engine.setRotation(sin(Time * walkSpeed) * 10);

    Rectangle pipe = (5*u, 15*u, bright);
    pipe.setParent(engine);
    pipe.setPosition(0, -5*u);

    Rectangle pipeEnd = (20*u, 5*u, bright);
    pipeEnd.setParent(engine);
    pipeEnd.setPosition(-10*u, -10*u);

    Vec2 frontLegOffset = (cos(Time * walkSpeed) * 10*u, -sin(Time * walkSpeed) * 5*u - 5*u);
    createLeg(u, bright, medium, dark, body, frontUpperRot, frontLowerRot, frontFootRot, frontLegOffset);

    # Scene
    Scene.add(body);
    Scene.setColor(Color.orange());
}

Vec4 colorFromValue(Num value) {
    Vec4 color = (value, value, value, 1);
    return color;
}

Void createLeg(Num u, Vec4 c_bright, Vec4 c_medium, Vec4 c_dark, Empty body, Num upperRot, Num lowerRot, Num footRot, Vec2 legOffset) {
    # Upper Leg
    Empty upper = (legOffset);
    upper.setParent(body);
    upper.setRotation(upperRot);

    Circle upperTopRound = (10*u, c_medium);
    upperTopRound.setParent(upper);

    Circle upperJointBG = (10*u, c_dark);
    upperJointBG.setParent(upper);
    upperJointBG.setPosition(0, -45*u);

    Circle upperJoint = (6*u, c_medium);
    upperJoint.setParent(upper);
    upperJoint.setPosition(0, -45*u);

    Vec2 up0 = (-7*u, -7*u);
    Vec2 up1 = ( 5*u, 8*u);
    Vec2 up2 = ( 13*u, 0*u);
    Vec2 up3 = ( 15*u, -20*u);
    Vec2 up4 = ( 12*u, -43*u);
    Vec2 up5 = (-8*u, -42*u);

    Polygon upperLeg = (up0, up1, up2, up3, up4, up5, c_medium);
    upperLeg.setParent(upper);

    Circle upperC = (7*u, c_bright);
    upperC.setParent(upper);

    # Lower Leg
    Empty lower = (0, -45*u);
    lower.setParent(upper);
    lower.setRotation(lowerRot);

    Vec2 lp0 = (-5*u,  -5*u);
    Vec2 lp1 = ( 5*u,  -5*u);
    Vec2 lp2 = ( 5*u,  -45*u);
    Vec2 lp3 = (-5*u,  -45*u);
    Vec2 lp4 = (-10*u, -30*u);
    Vec2 lp5 = (-10*u, -10*u);

    Polygon lowerLeg = (lp0, lp1, lp2, lp3, lp4, lp5, c_medium);
    lowerLeg.setParent(lower);

    Circle lowerC = (3*u, c_bright);
    lowerC.setParent(lower);

    Vec2 kp0 = (5*u,     12.5*u);
    Vec2 kp1 = (9.25*u,  7.25*u);
    Vec2 kp2 = (11.5*u,    0*u);
    Vec2 kp3 = (9.25*u, -7.25*u);
    Vec2 kp4 = (5*u,    -12.5*u);

    Polygon kneeCap = (kp0, kp1, kp2, kp3, kp4, c_bright);
    kneeCap.setParent(lower);

    # Foot
    Empty foot = (0, -45*u);
    foot.setParent(lower);
    foot.setRotation(footRot);

    Rectangle footInner = (7*u, 15*u, c_dark);
    footInner.setParent(foot);
    footInner.setPosition(0, -25*u);

    Rectangle footUpper = (10*u, 30*u, c_medium);
    footUpper.setParent(foot);
    footUpper.setPosition(0, -5*u);

    Rectangle footLower = (10*u, 15*u, c_medium);
    footLower.setParent(foot);
    footLower.setPosition(0, -35*u);

    Circle footTopRound = (5*u, c_medium);
    footTopRound.setPosition(0, 10*u);
    footTopRound.setParent(foot);

    Circle lowerJoint = (8*u, c_medium);
    lowerJoint.setParent(foot);

    Circle footC = (5*u, c_bright);
    footC.setParent(foot);

    Circle footEndBall = (8*u, c_bright);
    footEndBall.setPosition(0, -45*u);
    footEndBall.setParent(foot);
}